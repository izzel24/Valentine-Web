/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/box.glb 
*/

import React, { useState } from 'react'
import { useGLTF, useAnimations, Html } from '@react-three/drei'
import * as THREE from 'three';
import { cameraPosition } from 'three/tsl';
import { useThree } from '@react-three/fiber';
import { useNavigate } from 'react-router-dom';

export function Model(props) {
  const { camera } = useThree();
  const group = React.useRef()
  const { nodes, materials, animations } = useGLTF('../../../box.glb')
  const { actions } = useAnimations(animations, group)
  const navigate = useNavigate();

  const [isBoxClicked, setIsBoxClicked] = useState(false);
  const [isPlaying, setIsPlaying] = useState(false);
  const [isTopClicked, setIsTopClicked] = useState(false);
  const [isSuratOpen, setIsSuratOpen] =useState(false);
  
  const handleBoxClick = () => {
    if(!isBoxClicked) {
    camera.position.set(-1, 3, 0);
    camera.lookAt(0, 0, 0);
    setIsBoxClicked(true);
    }
  }

    const handleClick = () => {
      if (isBoxClicked) {
        const action = actions[animations[1].name]; 
        if (action) {
          if (isPlaying) {
            action.stop();
          } else {
            action.reset().play();
            action.clampWhenFinished = true; 
            action.setLoop(THREE.LoopOnce); 
          }
          setIsPlaying(!isPlaying);
        }
      }
      setIsTopClicked(true);
    };
    const handleSurat=() => {
      if (isTopClicked) {
        console.log('surat clicked');
        navigate('/surat');
        setIsSuratOpen(true);
      } 
    }
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Box" geometry={nodes.Box.geometry} material={materials['box.001']} position={[0, -0.72, -0.302]} rotation={[-Math.PI, 0, 0]} castShadow onClick={handleBoxClick} />
        <group name="Penutup" position={[0.011, -0.442, -0.312]} rotation={[-Math.PI, 0, 0]} castShadow onClick={handleClick}>
          <mesh name="Plane001" geometry={nodes.Plane001.geometry} material={materials.Material} />
          <mesh name="Plane001_1" geometry={nodes.Plane001_1.geometry} material={materials['box.001']} />
          <mesh name="pita" geometry={nodes.pita.geometry} material={materials.Material} position={[-0.3, -0.301, -0.396]} rotation={[-1.508, 0.028, -0.873]} scale={[0.514, 1.255, 0.547]}>
            <mesh name="BézierCircle001" geometry={nodes.BézierCircle001.geometry} material={materials.Material} position={[0.943, 0.412, 0.015]} rotation={[0, 0, -Math.PI / 2]} scale={[0.409, 2.444, 1]} />
          </mesh>
        </group>
        <mesh name="3B495752-C706-4F12-B7A1-DB77CE3525DF" geometry={nodes['3B495752-C706-4F12-B7A1-DB77CE3525DF'].geometry} material={materials['3B495752-C706-4F12-B7A1-DB77CE3525DF']} position={[-0.47, -0.95, -1.143]} rotation={[0, -0.651, Math.PI]} castShadow />
        <mesh name="IMG_6240" geometry={nodes.IMG_6240.geometry} material={materials.IMG_6240} position={[0.492, -0.966, -1.245]} rotation={[0, -0.362, -Math.PI]} scale={[0.673, 1, 0.608]} castShadow/>
        <mesh name="WhatsApp_Image_2025-02-18_at_184004_28f7f931" geometry={nodes['WhatsApp_Image_2025-02-18_at_184004_28f7f931'].geometry} material={materials['WhatsApp Image 2025-02-18 at 18.40.04_28f7f931']} position={[0.206, -0.952, -0.878]} rotation={[-Math.PI, -Math.PI / 2, 0]} castShadow/>
        <mesh name="Plane" geometry={nodes.Plane.geometry} material={materials['Material.001']} position={[0, -0.935, 0.409]} scale={[0.735, 1, 0.505]} onClick={handleSurat} castShadow />
        <mesh name="surat" geometry={nodes.surat.geometry} material={materials['Material.002']} position={[0.123, -0.93, 0.324]} rotation={[0, -Math.PI / 2, 0]} scale={[0.558, 2.578, 0.237]} />
      </group>
    </group>
  )
}

useGLTF.preload('../../../box.glb')
